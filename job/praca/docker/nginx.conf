learning# This file is managed by ansible, don't make changes here - they will be overwritten.

map $http_cookie $isDevHack {
    default "";
    ~DEVELOPER_ACCESS=xxxZ7 "/non-existed-location";
}
map "$scheme:$request_method:$request_uri" $redirect {
    default YES;
    ~^((http:POST:.*)|(https:.*:.*)|(.*:.*:/files/.*))$ NO;
}

limit_req_zone $binary_remote_addr zone=rcsps:20m rate=40r/s;
limit_req_zone $binary_remote_addr zone=rcsps_dyn:20m rate=20r/s;

server {
    listen 80;
    listen 443 ssl;
{% if project_nginx_local_debug_name is defined %}
    server_name {{project_nginx_local_debug_name}} {{ nginx_site_hostname }} www.{{ nginx_site_hostname }};
{% else %}
    server_name {{ nginx_site_hostname }} www.{{ nginx_site_hostname }};
{% endif %}

    root /h/pracaby/code/current/public;
    index index.html index.php;
    client_max_body_size 20M;

    # SSL
{% if setting_environment == 'dev' %}
    ssl_certificate      {{ project_nginx_ssl_directory }}/praca-dev.web.crt;
    ssl_certificate_key  {{ project_nginx_ssl_directory }}/praca-dev.web.key;
{% else %}
    ssl_certificate      /etc/letsencrypt/live/{{ nginx_site_hostname }}/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/{{ nginx_site_hostname }}/privkey.pem;
{% endif %}
    ssl_prefer_server_ciphers on;
    ssl_session_timeout  5m;
    ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers          HIGH:!aNULL:!MD5;

    access_log /var/log/nginx/{{ nginx_site_hostname }}.access.log main;
    error_log  /var/log/nginx/{{ nginx_site_hostname }}.error.log;

    # Only requests to our Host are allowed
{% if project_nginx_local_debug_name is defined %}
    if ($host !~ ^({{project_nginx_local_debug_name}}|{{ nginx_site_hostname }}|www.{{ nginx_site_hostname }})$ ) {
       return 444;
    }
{% else %}
    if ($host !~ ^({{ nginx_site_hostname }}|www.{{ nginx_site_hostname }})$ ) {
       return 444;
    }
{% endif %}

    # Redirect www to nowww
    if ($host = 'www.{{ nginx_site_hostname }}') {
       return 301 https://{{ nginx_site_hostname }}$request_uri;
    }

    # Redirect to HTTPS
    if ($redirect = YES) {
       return 301 https://$host$request_uri;
    }

{% if project_nginx_local_debug_name is defined %}
    #include /etc/nginx/includes/phpmyadmin.conf;
    #include /etc/nginx/includes/letsencrypt.conf;
{% else %}
    include /etc/nginx/includes/phpmyadmin.conf;
    include /etc/nginx/includes/letsencrypt.conf;
{% endif %}

    # Example HTTP Basic Authentication
    # auth_basic "Restricted";
    # auth_basic_user_file /etc/nginx/htpasswd;

    # Locations

    location / {
       if (-f $isDevHack/h/pracaby/maintenance) {
         return 503;
       }
       rewrite ^([^.]*[^/])$ $1/ permanent;
       try_files $uri $uri/ /index.php?$args;
    }

    # Rewrite min js and min css
    location ~* (.+\.min)\..+\.(js|css)$ {
       try_files $uri $1.$2;
    }

    # Websocket (php daemon praca-notify-websocket)
    location /ws/ {
       proxy_pass http://127.0.0.1:8080;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
       proxy_set_header Proxy "";
    }

    # Main
    location ~ \.php {
       fastcgi_pass  unix:/run/php/{{ php_fpm_daemon }}.sock;
       fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
       include fastcgi_params;
    }

    # HTTP File Server
    location = /file-server/praca.php {
       root /h/pracaby/http-file-server/;
       fastcgi_pass  unix:/run/php/{{ php_fpm_daemon }}.sock;
       fastcgi_param SCRIPT_FILENAME /h/pracaby/http-file-server/praca.php;
       include fastcgi_params;
    }

    location /files/ {
       alias /h/pracaby/http-file-server/praca/;
       expires 30d;
    }

    location /pictures/ {
       alias /h/pracaby/http-file-server/praca/;
       expires 30d;
    }

    location /img/ {
       expires 30d;
    }

    location ~* \.(js|css)$ {
       expires 30d;
    }

    location ~* \.(tpl|log|ht)$ {
       deny all;
    }

    # Errors
    error_page 503 @maintenance;
    location @maintenance {
       rewrite ^(.*)$ /maintenance-mode.html break;
    }

    location /error_pages_internal/ {
       alias /h/pracaby/code/current/template/error-pages/;
       allow all;
       internal;
    }

    error_page 400 /error_pages_internal/400.html;
    error_page 401 /error_pages_internal/401.html;
    error_page 403 /error_pages_internal/403.html;
    error_page 404 /error_pages_internal/404.html;
    error_page 408 /error_pages_internal/408.html;
    error_page 413 /error_pages_internal/413.html;
    error_page 414 /error_pages_internal/414.html;
    error_page 429 /error_pages_internal/429.html;
    error_page 431 /error_pages_internal/431.html;
    error_page 500 /error_pages_internal/500.html;
    error_page 502 /error_pages_internal/502.html;
    error_page 503 /error_pages_internal/503.html;
    error_page 504 /error_pages_internal/504.html;

{% if setting_environment == 'dev' %}
## test start
## test end
{% else %}
{% endif %}

}
